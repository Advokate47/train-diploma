{"ast":null,"code":"var _jsxFileName = \"/Users/ksenialasenko/Desktop/gitHub/train-master/src/js/ProgressSteps.js\";\nimport React from 'react';\n\nvar ProgressSteps = function ProgressSteps(props) {\n  var current = props.location.pathname;\n  var steps = [{\n    step: \"/search/seats\",\n    title: \"Билеты\"\n  }, {\n    step: \"/passengers\",\n    title: \"Пассажиры\"\n  }, {\n    step: \"/payment\",\n    title: \"Оплата\"\n  }, {\n    step: \"/confirmation\",\n    title: \"Проверка\"\n  }];\n\n  var isCurrent = function isCurrent(element, i) {\n    return element.step.match(current) || i <= steps.findIndex(function (el) {\n      return el.step === current;\n    });\n  };\n\n  return React.createElement(\"section\", {\n    className: \"progress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, steps.map(function (el, i) {\n    return React.createElement(\"div\", {\n      className: \"progress__step \".concat(isCurrent(el, i) ? \"progress__step-current\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, i + 1), React.createElement(\"span\", {\n      className: \"progress__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, el.title), i === 3 ? null : React.createElement(\"div\", {\n      className: \"progress__arrow \".concat(isCurrent(el, i) ? \"progress__arrow-current\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport { ProgressSteps };","map":{"version":3,"sources":["/Users/ksenialasenko/Desktop/gitHub/train-master/src/js/ProgressSteps.js"],"names":["React","ProgressSteps","props","current","location","pathname","steps","step","title","isCurrent","element","i","match","findIndex","el","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,CAAeC,QAA/B;AACA,MAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADY,EAKZ;AACED,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALY,EASZ;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GATY,EAaZ;AACED,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GAbY,CAAd;;AAmBA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAUC,CAAV,EAAgB;AAChC,WAAOD,OAAO,CAACH,IAAR,CAAaK,KAAb,CAAmBT,OAAnB,KAA+BQ,CAAC,IAAIL,KAAK,CAACO,SAAN,CAAgB,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACP,IAAH,KAAYJ,OAAhB;AAAA,KAAlB,CAA3C;AACD,GAFD;;AAIA,SACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACS,GAAN,CAAU,UAACD,EAAD,EAAKH,CAAL;AAAA,WAAY;AAAK,MAAA,SAAS,2BAAoBF,SAAS,CAACK,EAAD,EAAKH,CAAL,CAAT,GAAmB,wBAAnB,GAA8C,EAAlE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACtB;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,CAAC,GAAC,CAA5B,CADsB,EAEtB;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCG,EAAE,CAACN,KAArC,CAFsB,EAGrBG,CAAC,KAAK,CAAN,GAAU,IAAV,GAAiB;AAAK,MAAA,SAAS,4BAAqBF,SAAS,CAACK,EAAD,EAAKH,CAAL,CAAT,GAAmB,yBAAnB,GAA+C,EAApE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,CAAZ;AAAA,GAAV,CADH,CADF;AAUD,CAnCD;;AAqCA,SAAQV,aAAR","sourcesContent":["import React from 'react';\n\nconst ProgressSteps = (props) => {\n  const current = props.location.pathname;\n  const steps = [\n    {\n      step: \"/search/seats\",\n      title: \"Билеты\"\n    },\n    {\n      step: \"/passengers\",\n      title: \"Пассажиры\"\n    },\n    {\n      step: \"/payment\",\n      title: \"Оплата\"\n    },\n    {\n      step: \"/confirmation\",\n      title: \"Проверка\"\n    }\n  ];\n\n  const isCurrent = (element, i) => {\n    return element.step.match(current) || i <= steps.findIndex(el => el.step === current)\n  }\n\n  return (\n    <section className=\"progress\">\n      {steps.map((el, i) => (<div className={`progress__step ${isCurrent(el, i) ? \"progress__step-current\" : \"\"}`}>\n       <span className=\"number\">{i+1}</span>\n       <span className=\"progress__text\">{el.title}</span>\n       {i === 3 ? null : <div className={`progress__arrow ${isCurrent(el, i) ? \"progress__arrow-current\" : \"\"}`}></div>}\n     </div>)\n     )}\n   </section>\n  )\n}\n\nexport {ProgressSteps}\n\n"]},"metadata":{},"sourceType":"module"}