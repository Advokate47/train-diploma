{"ast":null,"code":"import _slicedToArray from \"/Users/ksenialasenko/Desktop/gitHub/train-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ksenialasenko/Desktop/gitHub/train-master/src/js/TypeaheadInput.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { ApiServiceContext } from './context';\n\nvar TypeaheadInput = function TypeaheadInput(props) {\n  var api = useContext(ApiServiceContext);\n  var placeholder = props.placeholder,\n      onSelect = props.onSelect;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cities = _useState2[0],\n      setCities = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSuggestions = _useState4[0],\n      setShowSuggestions = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hint = _useState6[0],\n      setHint = _useState6[1];\n\n  var _useState7 = useState(props.value),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputValue = _useState8[0],\n      setInputValue = _useState8[1];\n\n  useEffect(function () {//if (props.value !== inputValue) {\n    //setInputValue(props.value);\n    //}\n  }, [props.value, inputValue]);\n\n  var handleFocus = function handleFocus(event) {\n    var value = event.currentTarget.value || 'а';\n    api.getCities(value).then(function (response) {\n      setHint('');\n      setShowSuggestions(true);\n      setCities(response);\n    });\n  };\n\n  var handleBlur = function handleBlur() {\n    setTimeout(function () {\n      return setShowSuggestions(false);\n    }, 1000);\n  };\n\n  var handleInput = function handleInput(event) {\n    var value = event.currentTarget.value;\n\n    if (value.match(/[^а-яА-я ]/)) {\n      return;\n    }\n\n    setInputValue(value);\n    api.getCities(value).then(function (response) {\n      var newHint = response.length > 0 ? response.find(function (el) {\n        return el.name.startsWith(value);\n      }) : '';\n      setHint(newHint ? newHint.name : '');\n      setShowSuggestions(true);\n      setCities(response);\n    });\n  };\n\n  var handleSelect = function handleSelect(event) {\n    setInputValue(event.target.textContent);\n    setHint('');\n    onSelect({\n      name: event.target.textContent,\n      id: event.target.dataset.id\n    });\n    setShowSuggestions(false);\n  };\n\n  var suggestions,\n      current = -1;\n\n  var handleKeydown = function handleKeydown(event) {\n    if (!suggestions) {\n      return;\n    }\n\n    if (event.key === 'ArrowDown') {\n      current++;\n      Array.from(suggestions.children).forEach(function (el) {\n        return el.classList.remove('suggestion-active');\n      });\n\n      if (current > suggestions.children.length - 1) {\n        current = 0;\n      }\n\n      suggestions.children[current].classList.add('suggestion-active');\n    } else if (event.key === 'ArrowUp') {\n      current--;\n      Array.from(suggestions.children).forEach(function (el) {\n        return el.classList.remove('suggestion-active');\n      });\n\n      if (current < 0) {\n        current = suggestions.children.length - 1;\n      }\n\n      suggestions.children[current].classList.add('suggestion-active');\n    } else if (event.key === 'Enter') {\n      var active = Array.from(suggestions.children).find(function (el) {\n        return el.classList.contains('suggestion-active');\n      });\n\n      if (!active) {\n        return;\n      }\n\n      onSelect({\n        name: active.textContent,\n        id: active.dataset.id\n      });\n      setInputValue(active.textContent);\n      setHint('');\n      setShowSuggestions(false);\n    } else {\n      handleInput(event);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"input-with-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"trainpicker__hint\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"trainpicker__hint-transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, hint.slice(0, inputValue.length)), hint.slice(inputValue.length)), React.createElement(\"input\", {\n    className: \"trainpicker__input trainpicker__input-direction\",\n    value: inputValue,\n    onChange: handleInput,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    type: \"text\",\n    placeholder: placeholder,\n    onKeyDown: handleKeydown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"material-icons trainpicker__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"room\"), showSuggestions && cities.length > 0 ? React.createElement(\"ul\", {\n    ref: function ref(el) {\n      return suggestions = el;\n    },\n    onClick: handleSelect,\n    className: \"suggestions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, cities.map(function (city) {\n    return React.createElement(\"li\", {\n      key: city._id,\n      \"data-id\": city['_id'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, city.name);\n  })) : null);\n};\n\nexport { TypeaheadInput };","map":{"version":3,"sources":["/Users/ksenialasenko/Desktop/gitHub/train-master/src/js/TypeaheadInput.js"],"names":["React","useContext","useState","useEffect","ApiServiceContext","TypeaheadInput","props","api","placeholder","onSelect","cities","setCities","showSuggestions","setShowSuggestions","hint","setHint","value","inputValue","setInputValue","handleFocus","event","currentTarget","getCities","then","response","handleBlur","setTimeout","handleInput","match","newHint","length","find","el","name","startsWith","handleSelect","target","textContent","id","dataset","suggestions","current","handleKeydown","key","Array","from","children","forEach","classList","remove","add","active","contains","slice","map","city","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport {ApiServiceContext} from './context';\n\n\nconst TypeaheadInput = (props) => {\n  const api = useContext(ApiServiceContext);\n  const {placeholder, onSelect} = props;\n  const [cities, setCities] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const [hint, setHint] = useState('');\n  const [inputValue, setInputValue] = useState(props.value);\n  \n  useEffect(() => {\n    //if (props.value !== inputValue) {\n      //setInputValue(props.value);\n    //}\n  }, [props.value, inputValue]);\n\n  const handleFocus = (event) => {\n    const value = event.currentTarget.value || 'а';\n    api.getCities(value).then(response => {\n      setHint('');\n      setShowSuggestions(true);\n      setCities(response);\n    });\n  }\n\n  const handleBlur = () => {\n    setTimeout(() => setShowSuggestions(false), 1000);\n  }\n  \n  const handleInput = event => {\n    const value = event.currentTarget.value;\n    if (value.match(/[^а-яА-я ]/)) {\n      return;\n    }\n\n    setInputValue(value);\n\n    api.getCities(value).then(response => {\n      let newHint = response.length > 0 ? response.find(el => el.name.startsWith(value)) : '';\n      setHint(newHint ? newHint.name : '');\n      setShowSuggestions(true);\n      setCities(response);\n    });\n  }\n\n  const handleSelect = event => {\n    setInputValue(event.target.textContent);\n    setHint('');\n    onSelect({\n      name: event.target.textContent, \n      id: event.target.dataset.id\n    });\n    setShowSuggestions(false);\n  }\n\n  let suggestions, current = -1;\n  const handleKeydown = event => {\n    if (!suggestions) {\n      return;\n    }\n    if (event.key === 'ArrowDown') {\n        current++;\n        Array.from(suggestions.children).forEach(el => el.classList.remove('suggestion-active'));\n        if (current > suggestions.children.length - 1) {\n          current = 0;\n        }\n        suggestions.children[current].classList.add('suggestion-active');\n    } else if (event.key === 'ArrowUp') {\n        current--;\n        Array.from(suggestions.children).forEach(el => el.classList.remove('suggestion-active')); \n        if (current < 0) {\n          current = suggestions.children.length - 1;\n        }\n        suggestions.children[current].classList.add('suggestion-active');\n    } else if (event.key === 'Enter') {\n        let active = (Array.from(suggestions.children)).find(el => el.classList.contains('suggestion-active'));\n        if (!active) {\n          return;\n        }\n        onSelect({\n          name: active.textContent,\n          id: active.dataset.id\n        });\n        setInputValue(active.textContent);\n        setHint('');\n        setShowSuggestions(false);\n      } else {\n        handleInput(event);\n      }\n    }\n\n  return (\n    <div className=\"input-with-icon\">\n      <span className=\"trainpicker__hint\">\n        <span className=\"trainpicker__hint-transparent\">{hint.slice(0, inputValue.length)}</span>{hint.slice(inputValue.length)}\n      </span>\n      <input className=\"trainpicker__input trainpicker__input-direction\" value={inputValue} onChange={handleInput} onFocus={handleFocus} onBlur={handleBlur} type=\"text\" placeholder={placeholder} onKeyDown={handleKeydown}/>\n      <i className=\"material-icons trainpicker__icon\">room</i>\n      {showSuggestions && cities.length > 0 ? \n        <ul ref={el => suggestions = el} onClick={handleSelect} className=\"suggestions\" >\n          {cities.map(city => <li key={city._id}  data-id={city['_id']}>{city.name}</li>)}\n        </ul> :\n        null\n      }\n    </div>\n  )\n}\n\nexport {TypeaheadInput}"]},"metadata":{},"sourceType":"module"}