{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ksenialasenko/Desktop/gitHub/train-master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ksenialasenko/Desktop/gitHub/train-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ksenialasenko/Desktop/gitHub/train-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport React from 'react';\nexport var ApiContext = React.createContext();\nexport var ApiServiceReverse = function ApiServiceReverse() {\n  var _this = this;\n\n  _classCallCheck(this, ApiServiceReverse);\n\n  this.fetchData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(urlEntity) {\n      var options,\n          res,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {\n                method: 'GET'\n              };\n              _context.next = 3;\n              return fetch(\"https://netology-trainbooking.herokuapp.com\".concat(urlEntity), options);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.ok) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error(\"Could not fetch \".concat(urlEntity, \", status - \").concat(res.status));\n\n            case 6:\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.getCities =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(query) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.fetchData(\"/routes/cities?name=\".concat(query));\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.getRoutes =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(params, sortBy, limit, offset) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.fetchData(\"/routes?from_city_id=\".concat(params.to.id, \"&to_city_id=\").concat(params.from.id, \"&sort=\").concat(sortBy, \"&limit=\").concat(limit, \"&offset=\").concat(offset, \"&\").concat(params.filters || \"?\"));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3, _x4, _x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.getSeats =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(id) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this.fetchData(\"/routes/\".concat(id, \"/seats\"));\n\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.createOrder =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(order) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this.fetchData(\"/order\", {\n                method: 'POST',\n                body: JSON.stringify(order)\n              });\n\n            case 2:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x8) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.subscribe =\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(email) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _this.fetchData(\"/subscribe?\".concat(email), {\n                method: 'POST'\n              });\n\n            case 2:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/ksenialasenko/Desktop/gitHub/train-master/src/js/ApiServiceReverse.js"],"names":["React","ApiContext","createContext","ApiServiceReverse","fetchData","urlEntity","options","method","fetch","res","ok","Error","status","json","getCities","query","getRoutes","params","sortBy","limit","offset","to","id","from","filters","getSeats","createOrder","order","body","JSON","stringify","subscribe","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,EAAnB;AAEP,WAAaC,iBAAb;AAAA;;AAAA;;AAAA,OACEC,SADF;AAAA;AAAA;AAAA;AAAA;AAAA,6BACc,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,cAAAA,OAAlB,2DAA4B;AAACC,gBAAAA,MAAM,EAAE;AAAT,eAA5B;AAAA;AAAA,qBACQC,KAAK,sDAA+CH,SAA/C,GAA4DC,OAA5D,CADb;;AAAA;AACJG,cAAAA,GADI;;AAAA,kBAELA,GAAG,CAACC,EAFC;AAAA;AAAA;AAAA;;AAAA,oBAGF,IAAIC,KAAJ,2BAA6BN,SAA7B,wBAAoDI,GAAG,CAACG,MAAxD,EAHE;;AAAA;AAAA;AAAA,qBAKGH,GAAG,CAACI,IAAJ,EALH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADd;;AAAA;AAAA;AAAA;AAAA;;AAAA,OASEC,SATF;AAAA;AAAA;AAAA;AAAA;AAAA,6BASc,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACG,KAAI,CAACX,SAAL,+BAAsCW,KAAtC,EADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATd;;AAAA;AAAA;AAAA;AAAA;;AAAA,OAaEC,SAbF;AAAA;AAAA;AAAA;AAAA;AAAA,6BAac,kBAAOC,MAAP,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACG,KAAI,CAAChB,SAAL,gCAAuCa,MAAM,CAACI,EAAP,CAAUC,EAAjD,yBAAkEL,MAAM,CAACM,IAAP,CAAYD,EAA9E,mBAAyFJ,MAAzF,oBAAyGC,KAAzG,qBAAyHC,MAAzH,cAAmIH,MAAM,CAACO,OAAP,IAAkB,GAArJ,EADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbd;;AAAA;AAAA;AAAA;AAAA;;AAAA,OAiBEC,QAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,6BAiBa,kBAAOH,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI,KAAI,CAAClB,SAAL,mBAA0BkB,EAA1B,YADJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBb;;AAAA;AAAA;AAAA;AAAA;;AAAA,OAqBEI,WArBF;AAAA;AAAA;AAAA;AAAA;AAAA,6BAqBgB,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACC,KAAI,CAACvB,SAAL,WAAyB;AACpCG,gBAAAA,MAAM,EAAE,MAD4B;AAEpCqB,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,KAAf;AAF8B,eAAzB,CADD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KArBhB;;AAAA;AAAA;AAAA;AAAA;;AAAA,OA4BEI,SA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,6BA4Bc,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACG,KAAI,CAAC5B,SAAL,sBAA6B4B,KAA7B,GAAsC;AACjDzB,gBAAAA,MAAM,EAAE;AADyC,eAAtC,CADH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5Bd;;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\n\nexport const ApiContext = React.createContext();\n\nexport class ApiServiceReverse {\n  fetchData = async (urlEntity, options = {method: 'GET'}) => {\n    const res = await fetch(`https://netology-trainbooking.herokuapp.com${urlEntity}`, options);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${urlEntity}, status - ${res.status}`)\n    } \n    return await res.json()\n  }\n\n  getCities = async (query) => {\n    return await this.fetchData(`/routes/cities?name=${query}`)\n  }\n\n  getRoutes = async (params, sortBy, limit, offset) => {\n    return await this.fetchData(`/routes?from_city_id=${params.to.id}&to_city_id=${params.from.id}&sort=${sortBy}&limit=${limit}&offset=${offset}&${params.filters || \"?\"}`)\n  }\n\n  getSeats = async (id) => {\n    return await this.fetchData(`/routes/${id}/seats`)\n  }\n\n  createOrder = async (order) => {\n    return await this.fetchData(`/order`, {\n      method: 'POST',\n      body: JSON.stringify(order)\n    })\n  }\n\n  subscribe = async (email) => {\n    return await this.fetchData(`/subscribe?${email}`, {\n      method: 'POST'\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}